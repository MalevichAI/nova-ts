{
  "name": "@malevichai/nova-ts",
  "version": "0.0.3",
  "description": "TypeScript types and generator for Nova resources with OGM metadata",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "type": "module",
  "keywords": [
    "typescript",
    "openapi",
    "schema",
    "generator",
    "nova",
    "ogm",
    "resources",
    "types"
  ],
  "files": [
    "dist/**/*",
    "README.md",
    "LICENSE"
  ],
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js"
    },
    "./module": {
      "types": "./dist/module.d.ts",
      "import": "./dist/module.js"
    },
    "./types": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js"
    },
    "./generator": {
      "types": "./dist/generator.d.ts",
      "import": "./dist/generator.js"
    },
    "./resource-generator": {
      "types": "./dist/resourceGenerator.d.ts",
      "import": "./dist/resourceGenerator.js"
    }
  },
  "bin": {
    "nova-ts": "dist/cli.js"
  },
  "scripts": {
    "build": "tsc --project tsconfig.json",
    "prepare": "npm run build",
    "test": "npm run build && jest",
    "test:quick": "npm run build && node test/test-usage.js",
    "generate": "node dist/cli.js",
    "generate:resources": "node -e \"const { generateResources } = require('./dist/resourceGenerator'); generateResources(process.argv[1], process.argv[2])\"",
    "prepublishOnly": "npm run build",
    "dev": "nuxi dev playground"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/malevichai/nova-ts.git"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org",
    "access": "public"
  },
  "author": "Aleksandr Lobanov",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/malevichai/nova-ts/issues"
  },
  "homepage": "https://github.com/malevichai/nova-ts#readme",
  "dependencies": {
    "@nuxt/kit": "^3.8.0",
    "json-schema-to-typescript": "^13.1.2"
  },
  "peerDependencies": {
    "nuxt": "^3.0.0"
  },
  "devDependencies": {
    "typescript": "^5.4.5",
    "@types/node": "^20.14.9",
    "nuxt": "^3.9.0",
    "jest": "^29.7.0",
    "@jest/globals": "^29.7.0",
    "ts-jest": "^29.1.1"
  },
  "jest": {
    "preset": "ts-jest/presets/default-esm",
    "testEnvironment": "node",
    "extensionsToTreatAsEsm": [
      ".ts"
    ],
    "moduleNameMapper": {
      "^(\\.{1,2}/.*)\\.js$": "$1"
    },
    "transform": {
      "^.+\\.tsx?$": [
        "ts-jest",
        {
          "useESM": true
        }
      ]
    },
    "testMatch": [
      "**/test/**/*.test.ts"
    ]
  }
}
